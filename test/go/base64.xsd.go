// Code generated by xgen. DO NOT EDIT.

package schema

import (
	"encoding/xml"
)

// MyType1 ...
type MyType1 string

// MyType2 ...
type MyType2 struct {
	XMLName    xml.Name `xml:"myType2"`
	LengthAttr *int     `xml:"length,attr"`
	Value      string   `xml:",chardata"`
}

// MyType3 ...
type MyType3 struct {
	XMLName    xml.Name `xml:"myType3"`
	LengthAttr *int     `xml:"length,attr"`
	Value      string   `xml:",chardata"`
}

// MyType4 ...
type MyType4 struct {
	XMLName   xml.Name `xml:"myType4"`
	Title     string   `xml:"title"`
	Blob      string   `xml:"blob"`
	Timestamp string   `xml:"timestamp"`
	Metadata  *string  `xml:"metadata"`
}

// MyType5 ...
type MyType5 string

// MyType6 ...
type MyType6 struct {
	CodeAttr       *string `xml:"code,attr"`
	IdentifierAttr *int    `xml:"identifier,attr"`
}

// MyType7 ...
type MyType7 struct {
	OriginAttr string `xml:"origin,attr"`
	Value      string `xml:",chardata"`
}

// MyType8 ...
type MyType8 struct {
	Title []*MyType4 `xml:"title"`
}

// MyType9 ...
type MyType9 struct {
	Title []*MyType4 `xml:"title"`
}

// MyType10 ...
type MyType10 struct {
	Title *MyType4 `xml:"title"`
}

// MyType11 ...
type MyType11 struct {
	Option1 *int      `xml:"option1"`
	Option2 *string   `xml:"option2"`
	Option3 *MyType10 `xml:"option3"`
}

// TopLevel ...
type TopLevel struct {
	CostAttr        *float64   `xml:"cost,attr"`
	LastUpdatedAttr string     `xml:"LastUpdated,attr"`
	Nested          *MyType7   `xml:"nested"`
	MyType1         []string   `xml:"myType1"`
	MyType2         []*MyType2 `xml:"myType2"`
	*MyType6
}
